/**
 * To use in your component:
 *
 * yourComponent.js:
 * import labels from 'c/labelService';
 *
 * export default class YourComponent extends LightningElement {
 *     label = labels;
 *
 *     console.log(this.label.AdminAuthenticated);
 * }
 *
 * yourComponent.html:
 * <button label={label.AdminAuthenticated} />
 *
 * WATCH OUT: If you are updating this service AND CustomLabels.labels-meta.xml in the same SFDX transaction, IT WILL FAIL.
 * The Custom Labels must exist BEFORE the LWC transaction takes place, or the entire push will fail.
 * To combat this, run this first:
 *     sfdx force:source:deploy -p force-app/main/default/labels/CustomLabels.labels-meta.xml
 * THEN:
 *     sfdx force:source:push
 *
 * A good way around this is to have the CustomLabels in an earlier directory in your sfdx-project.json, that way it deploys first
 * And then have this labelService LWC in a later direcotry so it deploys later
 *
 * Service class generated by dx-utils/createLabelService.js at 8/10/2023, 1:51:11 PM from force-app/main/default/labels/CustomLabels.labels-meta.xml
 */

// Admin
import AdminSettingNotSetup from '@salesforce/label/c.AdminSettingNotSetup';
import Authorization from '@salesforce/label/c.Authorization';
import Authorize from '@salesforce/label/c.Authorize';
import AuthorizationFailure from '@salesforce/label/c.AuthorizationFailure';
import ArcGISAuthentication from '@salesforce/label/c.ArcGISAuthentication';
import ArcGISAuthenticationGetStarted from '@salesforce/label/c.ArcGISAuthenticationGetStarted';
import ArcGISSettings from '@salesforce/label/c.ArcGISSettings';
import ArcGISTypeEnterprise from '@salesforce/label/c.ArcGISType_Enterprise';
import ArcGISTypeHelpText from '@salesforce/label/c.ArcGISType_HelpText';
import ArcGISTypeOnline from '@salesforce/label/c.ArcGISType_Online';
import ArcGISTypeSelect from '@salesforce/label/c.ArcGISType_Select';
import Cancel from '@salesforce/label/c.Cancel';
import ConnectionTypeSelect from '@salesforce/label/c.ConnectionType_Select';
import ConnectionTypeApplication from '@salesforce/label/c.ConnectionType_Application';
import ConnectionTypeHelpText from '@salesforce/label/c.ConnectionType_HelpText';
import ConnectionTypeNamedUser from '@salesforce/label/c.ConnectionType_NamedUser';
import Edit from '@salesforce/label/c.Edit';
import EnterpriseProvideYourDetails from '@salesforce/label/c.EnterpriseProvideYourDetails';
import EnterpriseURL from '@salesforce/label/c.EnterpriseURL';
import EnterprisePortalURL from '@salesforce/label/c.EnterprisePortalURL';
import Loading from '@salesforce/label/c.Loading';
import OnlineDetailsClientID from '@salesforce/label/c.OnlineDetails_ClientID';
import OnlineDetailsClientSecret from '@salesforce/label/c.OnlineDetails_ClientSecret';
import OnlineDetailsDescriptionLink from '@salesforce/label/c.OnlineDetails_DescriptionLink';
import OnlineDetailsDescriptionPart2 from '@salesforce/label/c.OnlineDetails_DescriptionPart2';
import OnlineDetailsPassword from '@salesforce/label/c.OnlineDetails_Password';
import OnlineDetailsProvideYourDetails from '@salesforce/label/c.OnlineDetails_ProvideYourDetails';
import OnlineDetailsUsername from '@salesforce/label/c.OnlineDetails_Username';
import OnlineDetailsUserHelp from '@salesforce/label/c.OnlineDetails_UserHelp';

// Exception
import DAEBadQuery from '@salesforce/label/c.DAE_BadQuery';
import DAEBadRelationshipName from '@salesforce/label/c.DAE_BadRelationshipName';
import DAEFieldDoesNotExist from '@salesforce/label/c.DAE_FieldDoesNotExist';
import DAEFieldNotAccessible from '@salesforce/label/c.DAE_FieldNotAccessible';
import DAEObjectNotAccessible from '@salesforce/label/c.DAE_ObjectNotAccessible';
import DAEInvalidExternalId from '@salesforce/label/c.DAE_InvalidExternalId';
import DAEDuplicateRecordForUpsert from '@salesforce/label/c.DAE_DuplicateRecordForUpsert';

// Toast
import Connected from '@salesforce/label/c.Connected';
import Error from '@salesforce/label/c.Error';
import ToastError from '@salesforce/label/c.ToastError';
import ToastInfo from '@salesforce/label/c.ToastInfo';
import ToastSuccess from '@salesforce/label/c.ToastSuccess';
import ToastWarning from '@salesforce/label/c.ToastWarning';

// ArcGIS Map Component
import ArcGisComponentEmptyStateHeading from '@salesforce/label/c.ArcGisComponent_EmptyStateHeading';
import ArcGisComponentGenericError from '@salesforce/label/c.ArcGisComponent_GenericError';
import ArcGisComponentItemsSelected from '@salesforce/label/c.ArcGisComponent_ItemsSelected';
import New from '@salesforce/label/c.New';
import NoMapConfigured from '@salesforce/label/c.NoMapConfigured';
import Save from '@salesforce/label/c.Save';
import SaveToastMessage from '@salesforce/label/c.SaveToastMessage';
import NoFlowConfigured from '@salesforce/label/c.NoFlowConfigured';

const labels = {
    AdminSettingNotSetup,
    Authorization,
    Authorize,
    AuthorizationFailure,
    ArcGISAuthentication,
    ArcGISAuthenticationGetStarted,
    ArcGISSettings,
    ArcGISTypeEnterprise,
    ArcGISTypeHelpText,
    ArcGISTypeOnline,
    ArcGISTypeSelect,
    Cancel,
    ConnectionTypeSelect,
    ConnectionTypeApplication,
    ConnectionTypeHelpText,
    ConnectionTypeNamedUser,
    Edit,
    EnterpriseProvideYourDetails,
    EnterpriseURL,
    EnterprisePortalURL,
    Loading,
    OnlineDetailsClientID,
    OnlineDetailsClientSecret,
    OnlineDetailsDescriptionLink,
    OnlineDetailsDescriptionPart2,
    OnlineDetailsPassword,
    OnlineDetailsProvideYourDetails,
    OnlineDetailsUsername,
    OnlineDetailsUserHelp,
    DAEBadQuery,
    DAEBadRelationshipName,
    DAEFieldDoesNotExist,
    DAEFieldNotAccessible,
    DAEObjectNotAccessible,
    DAEInvalidExternalId,
    DAEDuplicateRecordForUpsert,
    Connected,
    Error,
    ToastError,
    ToastInfo,
    ToastSuccess,
    ToastWarning,
    ArcGisComponentEmptyStateHeading,
    ArcGisComponentGenericError,
    ArcGisComponentItemsSelected,
    New,
    NoMapConfigured,
    Save,
    SaveToastMessage,
    NoFlowConfigured
};

export default labels;
